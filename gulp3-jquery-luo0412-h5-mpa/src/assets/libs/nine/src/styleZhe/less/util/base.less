/**
 * 全局css复用 =====
 *
 * 参考 https://juejin.im/post/5a31f53f51882555cc41deda
 */
@import "_import_inside.less";

// 尺寸
.size(@w, @h) {
  width: @w;
  height: @h;
}

// 统一盒模型
.border-box() {
  *, *:after, *:before {
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
  }
}

// 最小尺寸, 兼容IE6
.min-w(@min-w) {
  min-width: @min-w;
  _width: @min-w;
}

.min-h(@min-h) {
  min-height: @min-h;
  _height: @min-h;
}

// 内联块级元素, 兼容IE6
.inline-block() {
  display: inline-block;
  *display: inline;
  *zoom: 1;
}

// 固定定位, 兼容IE6
.fixed() {
  position: fixed;
  _position: absolute;
  *zoom: 1;
}

// 浮动与清除浮动
.q-fl {
  float: left;
  //display: inline-block;
}

.q-fr {
  float: right;
  //display: inline-block;
}

.q-clearfix:after {
  display: block;
  clear: both;
  content: "";
  visibility: hidden;
  height: 0;
}

.q-clearfix {
  zoom: 1;
}

// 居中 =========
// txt-x等最为标志
// 文本水平居中
.center(txt-x) {
  text-align: center;
}

// 文本垂直居中
.center(txt-y) {
  display: table-cell;
  vertical-align: middle;
}

// 元素垂直居中
.center(bar-y, @h) {
  height: @h;
  line-height: @h;
}

// 容器居中
.center(auto-x) {
  display: block;
  margin-left: auto;
  margin-right: auto;
}

// 已知元素长宽
.center(known-xy, @w, @h) {
  .size(@w, @h);
  position: absolute;
  top: 50%;
  left: 50%;
  margin-top: -(@w / 2);
  margin-left: -(@h / 2);
}

.center(known-x, @w) {
  width: @w;
  position: absolute;
  left: 50%;
  margin-left: -(@h / 2);
}

.center(known-y, @h) {
  height: @h;
  position: absolute;
  top: 50%;
  margin-top: -(@w / 2);
}

// 居中, 不确定尺寸, 不兼容 IE6
.center(unknown) {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  margin: auto;
}

.center(unknown-x) {
  position: absolute;
  left: 0;
  right: 0;
  margin-left: auto;
  margin-right: auto;
}

.center(unknown-y) {
  position: absolute;
  top: 0;
  bottom: 0;
  margin-top: auto;
  margin-bottom: auto;
}

// 居中, CSS3 平移方式, 兼容性不行
.center(translate) {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

// 居中, Flex 方式, 兼容性不行
.center(flex) {
  display: flex;
  align-items: center;
  justify-content: center;
}

// 显隐 ==========
.q-none,
.q-default-hide {
  display: none;
}

// 用于SEO优化的隐藏文字
.q-txt-seo {
  text-indent: -9999px;
  overflow: hidden;
  text-align: left;
}

.q-show-this {
  display: block;
}

// 布局居中
.q-container {
  width: 1200px;
  margin-left: auto;
  margin-right: auto;
}

.container(@w: 1200px) {
  width: @w;
  margin-left: auto;
  margin-right: auto;
}

.container(fluid) {
  margin: 0 auto;
  width: 100%;
}

// 去除边距
.no-mt() {
  margin-top: 0 !important;
}

.no-mr() {
  margin-right: 0 !important;
}

.no-ml() {
  margin-left: 0 !important;
}

.no-mb() {
  margin-bottom: 0 !important;
}

.padding(@padding: @padding-common) {
  padding: @padding;
}

.mt() {
  margin-top: @top-common;
}

.mt(sm) {
  margin-top: @top-small;
}

.mr() {
  margin-right: @top-default;
}

.mr(sm) {
  margin-right: @top-sm;
}

.mb() {
  margin-bottom: @top-common;
}

.mb(sm) {
  margin-bottom: @top-sm;
}

.ml() {
  margin-left: @left;
}

.ml(sm) {
  margin-left: @left-sm;
}

.pt() {
  padding-top: @top-common;
}

.pt(sm) {
  padding-top: @top-sm;
}

.pr() {
  padding-right: @left;
}

.pr(sm) {
  padding-right: @left-small;
}

.pb() {
  padding-bottom: @top-common;
}

.pb(sm) {
  padding-bottom: @top-sm;
}

.pl() {
  padding-left: @left-common;
}

.pl(sm) {
  padding-left: @left-small;
}

.plr() {
  padding-left: @left;
  padding-right: @left;
}

.plr(sm) {
  padding-left: @left-small;
  padding-right: @left-small;
}

.ptb() {
  padding-top: @top-common;
  padding-bottom: @top-common;
}

.ptb(sm) {
  padding-top: @top-sm;
  padding-bottom: @top-sm;
}

.ptb(md) {
  padding-top: @top-md;
  padding-bottom: @top-md;
}

// 边距
.border() {
  border: 1px solid @grey-table-border;
}

.no-border-t() {
  border-top: none !important;
}

.no-border-b() {
  border-bottom: none !important;
}

// 鼠标 ========
.cursor() {
  cursor: pointer;
}

.no-cursor() {
  cursor: none !important;
}

.no-cursor(allow) {
  cursor: not-allowed;
}

.no-cursor(event) {
  pointer-events: none;
}

// 文字过多后显示省略号 ========
.txt-elli(@w: 250px) {
  max-width: @w;
  //display: inline-block;

  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

// 多行文本溢出
// 仅支持webkit
.txt-elli-mult(@n: 3) {
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: @n;
  word-break: break-all;
  -o-text-overflow: ellipsis;
  -ms-text-overflow: ellipsis;
  text-overflow: ellipsis;
  overflow: hidden;
}

// 两端对齐
.txt-justify() {
  text-align: justify;
  text-justify: inter-ideograph;
}

// 文本选择样式
.txt-selectarea(@bgcolor: @blue, @txtcolor: #333) {

  ::selection {
    background: @bgcolor;
    color: @txtcolor;
  }

  ::-moz-selection {
    background: @bgcolor;
    color: @txtcolor;
  }
}

.txt-noselect() {
  -moz-user-select: none;
  -webkit-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

// 文本强调
.txt-em() {
  padding-left: @left-small;
  padding-right: @left-small;
  background-color: @blue;
  color: @white;
}

// 有时，字体并不能在所有设备上都达到最佳的显示，所以可以让设备浏览器来帮助你
.txt-smooth {
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  text-rendering: optimizeLegibility;
}

// 子项布局 默认四列
.list(float, @w: 25%) {
  float: left;
  width: @w;
}

.list(inline, @w: 25%) {
  .inline-block();
  width: @w;
}

.list(flex) {
  flex: 1;
}

// 隔行换色斑马条
.list-zebra(odd, @color) {
  &.odd {
    > li:nth-child(odd) {
      background-color: @color;
    }
  }
}

.list-zebra(even, @color) {
  &.even {
    > li:nth-child(even) {
      background: green;
    }
  }
}

// 书写模式 从右至左、从上至下排版效果
.layout-reverse(txt-x) {
  direction: rtl;
  unicode-bidi: bidi-override;
}

.layout-reserve(txt-y) {
  writing-mode: tb-rl;
  writing-mode: vertical-rl;
}

// 用 max-width 来防止图片撑破容器
.max-img() {
  display: block;
  max-width: 100%;
  height: auto;
}

// 2x 3x 背景图片
.image-nx(@url) {
  background-image: url("@url + '@2x.png'");
  @media (-webkit-min-device-pixel-ratio: 3), (min-device-pixel-ratio: 3) {
    background-image: url("@url + '@3x.png'");
  }
}

// 将链接变成默认的文字样式
.link-unstyled() {
  color: inherit;
  cursor: inherit;
  text-decoration: inherit;
  &:active, &:focus {
    outline: none;
  }
}

// 透明度 ie8兼容
.opacity(@opacity: 20) {
  opacity: @opacity / 100;
  filter: alpha(opacity=@opacity);
}

// 动画
.anim(@name, @time: 1s, @ease: ease-in-out, @fillmode: forwards) {
  animation-name: @name;
  animation-duration: @time;
  animation-timing-function: @ease;
  animation-fill-mode: @fillmode;
}

/**
 * 盒子阴影
 * box-shadow: 水平阴影的位置, 垂直阴影的位置, 模糊距离, 阴影的大小,
 * 阴影的颜色, 阴影开始方向（默认是从里往外，设置inset就是从外往里）
 */
.box-shadow() {
  box-shadow: 0px 14px 26px 0px rgba(0, 0, 0, 0.1);
}

/**
 * 元素悬浮效果
 * 可以争对卡片等等
 */
// 加阴影的悬浮
.box-hover(shadow) {
  transition: all .2s linear;
  &:hover {
    .box-shadow();
    transform: translate3d(0, -2px, 0);
  }
}

// 加移动效果的悬浮
.box-hover(move) {
  transition: transform .5s ease;
  &:hover {
    transform: translateX(5px);
  }
}

/**
 * 三角形
 */

// 三角形
.triangle(@width: 4px,@color: #000) {
  display: inline-block;
  width: 0;
  height: 0;
  vertical-align: middle;
  border-top: @width solid @color;
  border-left: @width solid transparent;
  border-right: @width solid transparent;
}

// 三角形箭头气泡效果, IE6-7 无表现
.arrow(top, @w: 10px, @color, @x: 50%) {
  position: relative;
  &:before {
    position: absolute;
    bottom: 100%;
    left: @x;
    content: " ";
    height: 0;
    width: 0;
    pointer-events: none;
    border-style: solid;
    border-color: transparent;
    border-bottom-color: @color;
    border-width: unit(@w, px);
    @margin: -@w;
    margin-left: unit(@margin, px);
  }
}

.arrow(right, @w: 10px, @color, @y: 50%) {
  position: relative;
  &:before {
    position: absolute;
    left: 100%;
    top: @y;
    content: " ";
    height: 0;
    width: 0;
    pointer-events: none;
    border-style: solid;
    border-color: transparent;
    border-left-color: @color;
    border-width: unit(@w, px);
    @margin: -@w;
    margin-top: unit(@margin, px);
  }
}

.arrow(bottom, @w: 10px, @color, @x: 50%) {
  position: relative;
  &:before {
    position: absolute;
    top: 100%;
    left: @x;
    content: " ";
    height: 0;
    width: 0;
    pointer-events: none;
    border-style: solid;
    border-color: transparent;
    border-top-color: @color;
    border-width: unit(@w, px);
    @margin: -@w;
    margin-left: unit(@margin, px);
  }
}

.arrow(left, @w: 10px, @color, @y: 50%) {
  position: relative;
  &:before {
    position: absolute;
    right: 100%;
    top: @y;
    content: " ";
    height: 0;
    width: 0;
    pointer-events: none;
    border-style: solid;
    border-color: transparent;
    border-right-color: @color;
    border-width: unit(@w, px);
    @margin: -@w;
    margin-top: unit(@margin, px);
  }
}

// 三角形箭头气泡效果, 带边框
.arrow-with-border(top, @w: 10px, @color, @border-w: 1px, @border-color, @x: 50%) {
  position: relative;
  &:before, &:after {
    bottom: 100%;
    left: @x;
    content: " ";
    height: 0;
    width: 0;
    position: absolute;
    pointer-events: none;
    border-style: solid;
    border-color: transparent;
  }
  &:after {
    border-bottom-color: @color;
    border-width: unit(@w, px);
    @margin: -@w;
    margin-left: unit(@margin, px);
  }
  &:before {
    border-bottom-color: @border-color;
    @arrbo: @w+@border-w;
    border-width: unit(@arrbo, px);
    @margin-bo: -@arrbo;
    margin-left: unit(@margin-bo, px);
  }
}

.arrow-with-border(bottom, @w: 10px, @color, @border-w: 1px, @border-color, @x: 50%) {
  position: relative;
  &:before, &:after {
    top: 100%;
    left: @x;
    content: " ";
    height: 0;
    width: 0;
    position: absolute;
    pointer-events: none;
    border-style: solid;
    border-color: transparent;
  }
  &:after {
    border-top-color: @color;
    border-width: unit(@w, px);
    @margin: -@w;
    margin-left: unit(@margin, px);
  }
  &:before {
    border-top-color: @border-color;
    @arrbo: @w+@border-w;
    border-width: unit(@arrbo, px);
    @margin-bo: -@arrbo;
    margin-left: unit(@margin-bo, px);
  }
}

.arrow-with-border(left, @w: 10px, @color, @border-w: 1px, @border-color, @y: 50%) {
  position: relative;
  &:before, &:after {
    top: @y;
    right: 100%;
    content: " ";
    height: 0;
    width: 0;
    position: absolute;
    pointer-events: none;
    border-style: solid;
    border-color: transparent;
  }
  &:after {
    border-right-color: @color;
    border-width: unit(@w, px);
    @margin: -@w;
    margin-top: unit(@margin, px);
  }
  &:before {
    border-right-color: @border-color;
    @arrbo: @w+@border-w;
    border-width: unit(@arrbo, px);
    @margin-bo: -@arrbo;
    margin-top: unit(@margin-bo, px);
  }
}

.arrow-with-border(right, @w: 10px, @color, @border-w: 1px, @border-color, @y: 50%) {
  position: relative;
  &:before, &:after {
    top: @y;
    left: 100%;
    content: " ";
    height: 0;
    width: 0;
    position: absolute;
    pointer-events: none;
    border-style: solid;
    border-color: transparent;
  }
  &:after {
    border-left-color: @color;
    border-width: unit(@w, px);
    @margin: -@w;
    margin-top: unit(@margin, px);
  }
  &:before {
    border-left-color: @border-color;
    @arrbo: @w+@border-w;
    border-width: unit(@arrbo, px);
    @margin-bo: -@arrbo;
    margin-top: unit(@margin-bo, px);
  }
}

/**
 * 关闭按钮
 *
 * <button class="q-close-x" type="button"><span>&times;</span></button>
 */
.q-close-x {
  position: relative;
  -webkit-appearance: none;
  padding: 0;
  cursor: pointer;
  background: 0 0;
  border: 0;
  font-size: 20px;
  font-weight: 700;
  line-height: 1;
  color: #000;
  text-shadow: 0 1px 0 #fff;
  filter: alpha(opacity=20);
  opacity: .2;

  &:hover {
    color: #000;
    text-decoration: none;
    cursor: pointer;
    filter: alpha(opacity=50);
    opacity: .5;
  }
  &:before {
    content: '';
    position: absolute;
    top: -10px;
    left: -10px;
    right: -10px;
    bottom: -10px;
  }
}

// 像素边框问题
.onepx(...) {
  position: relative;
  &:after {
    content: '';
    display: block;
    position: absolute;
    left: 0;
    width: 100%;
    border-top: 1px solid rgba(7, 17, 27, 0.1);
    transform: scaleY(0.5);
  }
}

.onepx(top) {
  &:after {
    top: 0;
  }
}

.onepx(bottom) {
  &:after {
    bottom: 0;
  }
}

.onepx-easy(top, @color: #ccc) {
  box-shadow: inset 0px -1px 1px -1px @color;
}

.onepx-easy(bottom, @color: #ccc) {
  box-shadow: inset 0px 1px 1px -1px @color;
}




